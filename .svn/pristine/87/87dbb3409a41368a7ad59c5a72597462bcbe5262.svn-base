using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TypApplication.Model
{
    public class WordExercise : Exercise
    {
        private List<Word> wordlist;
        public WordExercise(List<Word> wordlist) : base (ExerciseType.Words)
        {
            this.wordlist = wordlist;
        }

        public override string PrintExercise()
        {
            string totalstring = "";
            bool capitalletter = true;

            foreach (Word word in wordlist)
            {
                if (capitalletter)
                {
                    word.Characters = FirstCharToUpper(word.Characters);
                    capitalletter = false;
                }

                totalstring += word.Characters + " ";
            }
            totalstring = totalstring.TrimEnd(' ');
            totalstring += ".";
            return totalstring;
        }

        private string FirstCharToUpper(string input)
        {
            switch (input)
            {
                case null: throw new ArgumentNullException(nameof(input));
                case "": throw new ArgumentException($"{nameof(input)} cannot be empty", nameof(input));
                default: return input.First().ToString().ToUpper() + input.Substring(1);
            }
        }
    }
}
