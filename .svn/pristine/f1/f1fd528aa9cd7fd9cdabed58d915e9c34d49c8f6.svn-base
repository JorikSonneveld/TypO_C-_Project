using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Typo.Model;

namespace Typo.View
{
    /// <summary>
    /// Interaction logic for CharcterPicker.xaml
    /// </summary>
    public partial class CharcterPicker : UserControl
    {
        private MainWindow mainWindow;
        private ExerciseView exerciseView;
        private List<char> characterList = new List<char>();
        public string Characters { get; set; }

   
        public CharcterPicker(MainWindow mainWindow)
        {
            this.mainWindow = mainWindow;
            InitializeComponent();
            DataContext = this;
        }

        private void Back_Click(object sender, RoutedEventArgs e)
        {
            mainWindow.Content = new MainMenu(mainWindow);
        }

        private void Start_Click(object sender, RoutedEventArgs e)
        {
            exerciseView = new ExerciseView(new CharacterExercise(characterList, (int)MaxWordLengthSlider.Value));
            mainWindow.Content = exerciseView;
        }

        private void UserControl_Loaded(object sender, RoutedEventArgs e)
        {
            var window = Window.GetWindow(this);
            window.KeyDown += HandleKeyPress;
        }

        private void HandleKeyPress(object sender, KeyEventArgs e)
        {
            char key = new KeyConverter().ConvertToString(e.Key)[0];
            if (!characterList.Contains(key))
                characterList.Add(key);
            else
                characterList.Remove(key);
            MakeStringFormCharacterlist(characterList);
            CharactersString.Content = Characters;
            InvalidateVisual();
        }

        private void MakeStringFormCharacterlist(List<char> chars)
        {
            Characters = String.Empty;
            foreach (char c in chars)
                Characters += c + " ";
            Console.WriteLine(Characters);
        }
    }
}
