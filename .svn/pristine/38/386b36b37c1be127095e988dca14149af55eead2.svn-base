using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Security.Permissions;
using System.Windows;
using System.Windows.Forms;
using TypApplication.Controller;
using TypApplication.Model;


namespace TypApplication.View
{
    public partial class MainForm : Form
    {
        public char lastKeyPress;
        public DatabaseController Database = new DatabaseController();
        CharacterPicker characterPicker;
        private MainMenu mainMenu;
        private bool DialogShown = false;

        public MainForm()
        {
            InitializeComponent();
            DialogTimer.Tick += Update;
            DialogTimer.Start();
            ShowMainMenu();
            ShowCoursePopup();
        }

        public void Update(object sender, EventArgs e) { ShowAvailableCourseDialog(); }

        public void ShowMainMenu()
        {
            ClearForm();
            mainMenu = new MainMenu(this);
            Controls.Add(mainMenu);
            CenterView(mainMenu);
        }

        public void ShowTypingExplanation()
        {
            ClearForm();
            TypingExplanation typingExplanation = new TypingExplanation(this);
            Controls.Add(typingExplanation);
            CenterView(typingExplanation);
        }

        public void NewWordExercise()
        {
            ClearForm();
            var exerciseView = new LoadingScreen(this, "WordExercise", 2);
            Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        public void NewCourseExercise(CourseExercise exercise)
        {
            ClearForm();
            var exerciseView = new ExerciseView(this, exercise);
            Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        public void NewGeneratedExcercise()
        {
            ClearForm();
            var exerciseView = new LoadingScreen(this, "GeneratedExercise", 2);
            Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        public void NewCharacterExcersise(List<char> charlist, int maxWordLength)
        {
            ClearForm();
            Exercise characterExercise = new CharacterExercise(charlist, maxWordLength);
            var exerciseView = new ExerciseView(this, characterExercise);
            Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        // method to load a new usercontrol for a random numberexercise
        public void NewNumberExercise(NumberExercise numberexercise)
        {
            ClearForm();
            var courseEnvironment = new LoadingScreen(this, "NumberExercise", 2);
            Controls.Add(courseEnvironment);
            CenterView(courseEnvironment);
        }

        public void ShowCourseFinished(int keyscore, int accscore, string title)
        {
            ClearForm();
            var completedView = new CourseFinished(this, keyscore, accscore, title);
            Controls.Add(completedView);
            CenterView(completedView);
        }

        public void ShowCourses()
        {
            ClearForm();
            var courses = new LoadingScreen(this, "ShowCourses", 2);
            Controls.Add(courses);
            CenterView(courses);
        }

        public void ShowSettings()
        {
            ClearForm();
            var settingsView = new SettingsView(this);
            Controls.Add(settingsView);
            CenterView(settingsView);
        }

        public void BeginCourse()
        {
            ClearForm();
            var courseEnvironment = new LoadingScreen(this, "CourseEnvironment", 2);
            Controls.Add(courseEnvironment);
            CenterView(courseEnvironment);
        }

        public void ClearForm()
        {
            Controls.Clear();
            for (int i = this.Controls.Count - 1; i >= 0; --i)
                this.Controls[i].Dispose();
            mainMenu = null;
        }

        public void ShowCoursePopup()
        {
            //CourseReadyPopupHost popup = new CourseReadyPopupHost();
            //popup.Width = 380;
            //popup.Height = 200;
            //Controls.Add(popup);
            //CenterView(popup);
        }

        public void CenterView(Control control)
        {
            control.Left = (ClientSize.Width - control.Width) / 2;
            control.Top = (ClientSize.Height - control.Height) / 2;
            control.Anchor = AnchorStyles.None;
        }

        public void ShowCharacterExercisePicker()
        {
            ClearForm();
            characterPicker = new CharacterPicker(this);
            Controls.Add(characterPicker);
            CenterView(characterPicker);
            KeyPreview = true;
        }

        private void ShowAvailableCourseDialog()
        {
            if (Database.RetrieveCoursesCurrentlyAvailable() != null && DialogShown == false)
            {
                DialogShown = true;
                Course course = Database.RetrieveCoursesCurrentlyAvailable();
                var result = System.Windows.MessageBox.Show
                    ("Course '" + course.Title + "' is available, the course is will start up automaticly.", "Course", MessageBoxButton.OK);
                if (result == MessageBoxResult.OK)
                {
                    NewCourseExercise(new CourseExercise(course));
                }
            }
        }

        private void MainForm_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (characterPicker.IsVisible() == true)
            {
                lastKeyPress = e.KeyChar;
                characterPicker.CharacterPicker_KeyPress(sender, e);
            }
        }
    }
}