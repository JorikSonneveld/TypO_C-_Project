using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;
using TypApplication.Controller;

namespace TypApplication.View
{
    public partial class MainForm : Form
    {
        private MainMenu mainMenu;
        public DatabaseController database = new DatabaseController();

        public MainForm()
        {
            InitializeComponent();
            ShowMainMenu(); 

        }

        public void ShowMainMenu()
        {
            ClearForm();
            mainMenu = new MainMenu(this);
            this.Controls.Add(mainMenu);
            CenterView(mainMenu);
        }

        public void NewExercise()
        {
            ClearForm();
            ExerciseView exerciseView = new ExerciseView(this, false);
            this.Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        public void NewGeneratedExcercise()
        {
            ClearForm();
            ExerciseView exerciseView = new ExerciseView(this, true);
            this.Controls.Add(exerciseView);
            CenterView(exerciseView);
        }

        public void ShowCourseFinished(int keyscore, int accscore)
        {
            ClearForm();
            CourseFinished completedview = new CourseFinished(this, keyscore, accscore);
            this.Controls.Add(completedview);
            CenterView(completedview);
        }

        public void ShowCourses()
        {
            ClearForm();
            Courses courses = new Courses(this);
            this.Controls.Add(courses);
            CenterView(courses);
        }

        public void ShowSettings()
        {
            ClearForm();
            SettingsView settingsView = new SettingsView(this);
            this.Controls.Add(settingsView);
            CenterView(settingsView);
        }

        private void ClearForm()
        {
            this.Controls.Clear();
            mainMenu = null;
        }

        private void CenterView(Control control)
        {
            control.Left = (this.ClientSize.Width - control.Width) / 2;
            control.Top = (this.ClientSize.Height - control.Height) / 2;
        }

        protected override void OnPaintBackground(PaintEventArgs e)
        {
            using (LinearGradientBrush brush = new LinearGradientBrush(this.ClientRectangle, Color.FromArgb(47, 54, 80), Color.FromArgb(29, 33, 58), 90F))
            {
                e.Graphics.FillRectangle(brush, this.ClientRectangle);
            }
        }
    }
}
