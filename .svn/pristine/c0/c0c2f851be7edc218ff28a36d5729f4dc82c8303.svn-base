using System;
using System.Activities;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Forms;
using System.Windows.Input;
using System.Windows.Interop;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Typo.Controller;
using Typo.Controller.RawInput;
using KeyEventArgs = System.Windows.Input.KeyEventArgs;
using UserControl = System.Windows.Controls.UserControl;
using Typo.Model;

namespace Typo.View
{
    /// <summary>
    /// Interaction logic for Multiplayer.xaml
    /// </summary>
    public partial class Multiplayer : UserControl
    {
        private MainWindow mainWindow;
        private int keyDown;
        private IntPtr keyHandle;
        private RawInput rawInput;
        private DatabaseController DatabaseController = new DatabaseController();
        private bool externKeyboard;

        public Multiplayer(MainWindow mainWindow)
        {
            WordExercise w = new WordExercise(DatabaseController.RetrieveRandomDbWords());
            this.mainWindow = mainWindow;
            InitializeComponent();
            Player1.ExerciseController = new ExerciseController(Player1, w);
            Player2.ExerciseController = new ExerciseController(Player2, w);
            keyHandle = new WindowInteropHelper(this.mainWindow).Handle; //KeyEvent handler
            rawInput = new RawInput(keyHandle, true); //RawInput reader
            rawInput.KeyPressed += OnKeyPressed; //Void OnKeyPress when KeyPress
        }

        private void OnKeyPressed(object sender, RawInputEventArg e)
        {
            keyDown++;
            if (keyDown == 2) //KeyPress
            {
                //Console.Write("key is " + e.KeyPressEvent.VKey);

                if (e.KeyPressEvent.Name.Equals("Standard PS/2 Keyboard"))
                {
                    //Console.Write(" intern");
                    externKeyboard = false;
                }

                else
                {
                    //Console.Write(" extern");
                    externKeyboard = true;
                }
                Console.WriteLine();
                keyDown = 0;
            }
        }

        private void Method(Object sender, KeyEventArgs e, bool b)
        {
            if (b)
            {
                Player2.ExerciseController.Handle_Key(sender, e);
            }
            else
            {
                Player1.ExerciseController.Handle_Key(sender, e);
            }
        }

        private void Multiplayer_OnKeyDown(object sender, KeyEventArgs e)
        {
            Method(sender, e, externKeyboard);
        }

        private void Multiplayer_OnLoaded(object sender, RoutedEventArgs e)
        {
            GridName.Focus();
        }
    }
}
